#include <stdio.h>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string.h>

// ./client  ip地址  端口号
int main(int argc,char* argv[])
{
        //进程 ip地址  端口号
        if(argc != 3){
            perror("Usage ./server [ip] [port]\n");
            return 1;
        }
        //ipv4 面向字节流  创建socket
        int sock = socket(AF_INET, SOCK_STREAM,0);
        if(sock < 0){
            perror("socket");
            return 2;
        }
        
    
        struct sockaddr_in server;//绑定的是服务器的ip和端口号
        server.sin_family = AF_INET;//协议族
        server.sin_addr.s_addr = inet_addr(argv[1]);//将ip专程4字节ip地址，在转成大端字节序
        server.sin_port = htons(atoi(argv[2]));
    
        //连接服务器
        int ret = connect(sock,(struct sockaddr*)&server,sizeof(server));
        if(ret < 0){//连接失败
            perror("connect");
            return 3;
        }

        //表示连接成功
        printf("Connect success...\n");

        char buf[1024];
        while(1){
            printf("client: ");
            fflush(stdout);

            ssize_t s = read(0, buf, sizeof(buf)-1);
            if(s > 0){//读取数据
                buf[s-1] = 0;

                write(sock, buf, strlen(buf));
            }
            else{
                break;
            }
            
            ssize_t rd = read(sock, buf, sizeof(buf)-1);
            if(rd > 0){
                buf[rd] = 0;
                printf("server# %s\n",buf);
            }

    
        }
    
        close(sock);
    return 0;
}
